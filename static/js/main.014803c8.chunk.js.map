{"version":3,"sources":["redux/reducer.js","components/TodoItem.jsx","components/DisplayTodos.jsx","components/Todos.jsx","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["AddTodoReducer","createSlice","name","initialState","reducers","addTodos","state","action","push","payload","removeTodos","filter","item","id","updateTodos","map","todo","completeTodos","completed","actions","reducer","TodoItem","props","updateTodo","completeTodo","inputRef","useRef","motion","li","className","animate","x","transition","type","duration","whileHover","scale","exit","backgroundColor","ref","disabled","defaultValue","onKeyPress","e","value","which","current","update","button","whileTap","onClick","focus","style","color","connect","todos","dispatch","addTodo","obj","useState","sort","setSort","AnimatePresence","length","setTodo","onChange","target","handleChange","alert","Math","floor","random","App","h1","initial","y","div","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAIMA,EAAiBC,YAAY,CACjCC,KAAM,QACNC,aAJmB,GAKnBC,SAAS,CAGPC,SAAS,SAACC,EAAOC,GAEf,OADAD,EAAME,KAAKD,EAAOE,SACXH,GAETI,YAAY,SAACJ,EAAOC,GAClB,OAAOD,EAAMK,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAON,EAAOE,YAEjDK,YAAY,SAACR,EAAOC,GAClB,OAAOD,EAAMS,KAAI,SAAAC,GACf,OAAGA,EAAKH,KAAON,EAAOE,QAAQI,GAC5B,2BACKG,GADL,IAEEJ,KAAML,EAAOE,QAAQG,OAGlBI,MAGXC,cAAc,SAACX,EAAOC,GACpB,OAAOD,EAAMS,KAAI,SAAAC,GACf,OAAGA,EAAKH,KAAON,EAAOE,QACpB,2BACKO,GADL,IAEEE,WAAW,IAGRF,SAMR,EAA4DhB,EAAemB,QAApEd,EAAP,EAAOA,SAAUK,EAAjB,EAAiBA,YAAaI,EAA9B,EAA8BA,YAAaG,EAA3C,EAA2CA,cACrCG,EAAUpB,EAAeoB,Q,+BC6BvBC,EAlEE,SAACC,GAChB,IAAQV,EAAgDU,EAAhDV,KAAMW,EAA0CD,EAA1CC,WAAYb,EAA8BY,EAA9BZ,YAAac,EAAiBF,EAAjBE,aAEjCC,EAAWC,kBAAO,GAaxB,OACE,eAACC,EAAA,EAAOC,GAAR,CACCC,UAAU,OAEVC,QAAS,CAACC,EAAE,EAAEC,WAAW,CAACC,KAAK,SAASC,SAAS,IACjDC,WAAY,CAACC,MAAM,GAAKJ,WAAW,CAACC,KAAK,SAASC,SAAS,KAC3DG,KAAM,CACJN,EAAG,QACHK,MAAM,CAAC,EAAE,GACTJ,WAAW,CAACE,SAAS,IACrBI,gBAAiB,sBATpB,UAWE,0BACEC,IAAKd,EACLe,SAAUf,EACVgB,aAAc7B,EAAKA,KACnB8B,WAAY,SAACC,GAAD,OAvBH,SAAC9B,EAAI+B,EAAOD,GACT,KAAZA,EAAEE,QACJtB,EAAW,CAAEV,KAAID,KAAMgC,IACvBnB,EAASqB,QAAQN,UAAW,GAoBPO,CAAOnC,EAAKC,GAAIY,EAASqB,QAAQF,MAAOD,MAE7D,sBAAKd,UAAU,OAAf,UACE,cAACF,EAAA,EAAOqB,OAAR,CACEb,WAAY,CAAEC,MAAO,KACrBa,SAAU,CAAEb,MAAO,IACnBc,QAAS,kBAhCfzB,EAASqB,QAAQN,UAAW,OAC5Bf,EAASqB,QAAQK,SA4Bb,SAKE,cAAC,IAAD,OAEkB,IAAnBvC,EAAKM,WACJ,cAACS,EAAA,EAAOqB,OAAR,CACEb,WAAY,CAAEC,MAAO,KACrBa,SAAU,CAAEb,MAAO,IACnBgB,MAAO,CAAEC,MAAO,SAChBH,QAAS,kBAAM1B,EAAaZ,EAAKC,KAJnC,SAME,cAAC,IAAD,MAGJ,cAACc,EAAA,EAAOqB,OAAR,CACEb,WAAY,CAAEC,MAAO,KACrBa,SAAU,CAAEb,MAAO,IACnBgB,MAAO,CAAEC,MAAO,OAChBH,QAAS,kBAAMxC,EAAYE,EAAKC,KAJlC,SAME,cAAC,IAAD,SAGHD,EAAKM,WAAa,sBAAMW,UAAU,YAAhB,oBA1CfjB,EAAKC,K,QC+EAyC,eA7FS,SAAChD,GACvB,MAAO,CACLiD,MAAOjD,MAIgB,SAACkD,GAC1B,MAAO,CACLC,QAAS,SAACC,GAAD,OAASF,EAASnD,EAASqD,KACpChD,YAAa,SAACG,GAAD,OAAQ2C,EAAS9C,EAAYG,KAC1CU,WAAY,SAACmC,GAAD,OAASF,EAAS1C,EAAY4C,KAC1ClC,aAAc,SAACX,GAAD,OAAQ2C,EAASvC,EAAcJ,QAkFlCyC,EA9EM,SAAChC,GACpB,MAAwBqC,mBAAS,UAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACE,sBAAKhC,UAAU,eAAf,UACE,sBAAKA,UAAU,UAAf,UACE,cAACF,EAAA,EAAOqB,OAAR,CACEb,WAAY,CAAEC,MAAO,KACrBa,SAAU,CAAEb,MAAO,IACnBc,QAAS,kBAAMW,EAAQ,WAHzB,oBAOA,cAAClC,EAAA,EAAOqB,OAAR,CACEb,WAAY,CAAEC,MAAO,KACrBa,SAAU,CAAEb,MAAO,IACnBc,QAAS,kBAAMW,EAAQ,cAHzB,uBAOA,cAAClC,EAAA,EAAOqB,OAAR,CACEb,WAAY,CAAEC,MAAO,KACrBa,SAAU,CAAEb,MAAO,IACnBc,QAAS,kBAAMW,EAAQ,QAHzB,oBAQF,6BACE,eAACC,EAAA,EAAD,WACGxC,EAAMiC,MAAMQ,OAAS,GAAc,WAATH,EACvBtC,EAAMiC,MAAMxC,KAAI,SAACH,GACf,OACqB,IAAnBA,EAAKM,WACH,cAAC,EAAD,CAEEN,KAAMA,EACNF,YAAaY,EAAMZ,YACnBa,WAAYD,EAAMC,WAClBC,aAAcF,EAAME,cAJfZ,EAAKC,OASlB,KACHS,EAAMiC,MAAMQ,OAAS,GAAc,cAATH,EACvBtC,EAAMiC,MAAMxC,KAAI,SAACH,GACf,OACqB,IAAnBA,EAAKM,WACH,cAAC,EAAD,CAEEN,KAAMA,EACNF,YAAaY,EAAMZ,YACnBa,WAAYD,EAAMC,WAClBC,aAAcF,EAAME,cAJfZ,EAAKC,OASlB,KACHS,EAAMiC,MAAMQ,OAAS,GAAc,QAATH,EACvBtC,EAAMiC,MAAMxC,KAAI,SAACH,GACf,OACE,cAAC,EAAD,CAEEA,KAAMA,EACNF,YAAaY,EAAMZ,YACnBa,WAAYD,EAAMC,WAClBC,aAAcF,EAAME,cAJfZ,EAAKC,OAQhB,gB,QCzCCyC,eAlDS,SAAChD,GACvB,MAAO,CACLiD,MAAOjD,MAIgB,SAACkD,GAC1B,MAAO,CACLC,QAAS,SAACC,GAAD,OAASF,EAASnD,EAASqD,QA0CzBJ,EAtCD,SAAChC,GACb,MAAwBqC,mBAAS,IAAjC,mBAAO3C,EAAP,KAAagD,EAAb,KAiBA,OACE,sBAAKnC,UAAU,WAAf,UACE,uBACEI,KAAK,OACLgC,SAAU,SAACtB,GAAD,OAnBK,SAACA,GACpBqB,EAAQrB,EAAEuB,OAAOtB,OAkBIuB,CAAaxB,IAC9Bd,UAAU,aACVe,MAAO5B,IAET,cAACW,EAAA,EAAOqB,OAAR,CACCb,WAAY,CAAEC,MAAO,KACrBa,SAAU,CAAEb,MAAO,IACnBc,QAAS,WAtBF,KAATlC,EACDoD,MAAM,mBAEN9C,EAAMmC,QAAQ,CACZ5C,GAAIwD,KAAKC,MAAsB,IAAhBD,KAAKE,UACpB3D,KAAMI,EACNE,WAAW,IAEb8C,EAAQ,MAeLnC,UAAU,UAJX,SAKE,cAAC,IAAD,MAEF,6BCvBS2C,EAvBH,WACV,OACE,sBAAK3C,UAAU,MAAf,UACE,cAACF,EAAA,EAAO8C,GAAR,CACEC,QAAS,CAAEC,GAAI,KACf7C,QAAS,CAAE6C,EAAG,GACd3C,WAAY,CAAEC,KAAM,SAAUC,SAAU,IACxCC,WAAY,CAAEC,MAAO,KAJvB,sBAQA,eAACT,EAAA,EAAOiD,IAAR,CACIF,QAAS,CAAEC,EAAG,KACd7C,QAAS,CAAE6C,EAAG,GACd3C,WAAY,CAAEC,KAAM,SAAUC,SAAU,GAH5C,UAKE,cAAC,EAAD,IACA,cAAC,EAAD,WCVO2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCACQ,EAJDC,YAAe,CAC3BnE,QAASA,ICIXoE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.014803c8.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = [];\r\n\r\nconst AddTodoReducer = createSlice({\r\n  name: 'todos',\r\n  initialState,\r\n  reducers:{\r\n    //here we will write our reducer \r\n    //Adding todos\r\n    addTodos:(state, action) =>{\r\n      state.push(action.payload)\r\n      return state\r\n    },\r\n    removeTodos:(state, action) =>{\r\n      return state.filter(item => item.id !== action.payload)\r\n    },\r\n    updateTodos:(state, action ) =>{\r\n      return state.map(todo =>{\r\n        if(todo.id === action.payload.id){\r\n          return{\r\n            ...todo,\r\n            item: action.payload.item,\r\n          }\r\n        }\r\n        return todo;\r\n      })\r\n    },\r\n    completeTodos:(state, action) =>{\r\n      return state.map(todo =>{\r\n        if(todo.id === action.payload){\r\n          return{\r\n            ...todo,\r\n            completed: true,\r\n          }\r\n        }\r\n        return todo;\r\n      })\r\n    }\r\n  }\r\n})\r\n\r\nexport const {addTodos, removeTodos, updateTodos, completeTodos} = AddTodoReducer.actions;\r\nexport const reducer = AddTodoReducer.reducer;","import React, { useRef } from \"react\";\r\nimport { AiFillEdit } from \"react-icons/ai\";\r\nimport { IoCheckmarkDoneSharp } from \"react-icons/io5\";\r\nimport { IoClose } from \"react-icons/io5\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst TodoItem = (props) => {\r\n  const { item, updateTodo, removeTodos, completeTodo } = props;\r\n\r\n  const inputRef = useRef(true);\r\n\r\n  const changeFocus = () => {\r\n    inputRef.current.disabled = false;\r\n    inputRef.current.focus();\r\n  };\r\n  const update = (id, value, e) => {\r\n    if (e.which === 13) {\r\n      updateTodo({ id, item: value });\r\n      inputRef.current.disabled = true;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.li\r\n     className=\"card\"\r\n     key={item.id}\r\n     animate={{x:0,transition:{type:'spring',duration:2}}}\r\n     whileHover={{scale:.9 , transition:{type:'spring',duration:.1}}}\r\n     exit={{\r\n       x: '-60vw',\r\n       scale:[1,0],\r\n       transition:{duration:0.5},\r\n       backgroundColor: 'rgba(255, 0, 0, 1)'\r\n     }}>\r\n      <textarea\r\n        ref={inputRef}\r\n        disabled={inputRef}\r\n        defaultValue={item.item}\r\n        onKeyPress={(e) => update(item.id, inputRef.current.value, e)}\r\n      />\r\n      <div className=\"btns\">\r\n        <motion.button\r\n          whileHover={{ scale: 1.4 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          onClick={() => changeFocus()}\r\n        >\r\n          <AiFillEdit />\r\n        </motion.button>\r\n        {item.completed === false && (\r\n          <motion.button\r\n            whileHover={{ scale: 1.4 }}\r\n            whileTap={{ scale: 0.9 }}\r\n            style={{ color: \"green\" }}\r\n            onClick={() => completeTodo(item.id)}\r\n          >\r\n            <IoCheckmarkDoneSharp />\r\n          </motion.button>\r\n        )}\r\n        <motion.button\r\n          whileHover={{ scale: 1.4 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          style={{ color: \"red\" }}\r\n          onClick={() => removeTodos(item.id)}\r\n        >\r\n          <IoClose />\r\n        </motion.button>\r\n      </div>\r\n      {item.completed && <span className=\"completed\">done</span>}\r\n    </motion.li>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addTodos,\r\n  removeTodos,\r\n  updateTodos,\r\n  completeTodos,\r\n} from \"../redux/reducer\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addTodo: (obj) => dispatch(addTodos(obj)),\r\n    removeTodos: (id) => dispatch(removeTodos(id)),\r\n    updateTodo: (obj) => dispatch(updateTodos(obj)),\r\n    completeTodo: (id) => dispatch(completeTodos(id)),\r\n  };\r\n};\r\n\r\nconst DisplayTodos = (props) => {\r\n  const [sort, setSort] = useState(\"active\");\r\n  return (\r\n    <div className=\"displaytodos\">\r\n      <div className=\"buttons\">\r\n        <motion.button\r\n          whileHover={{ scale: 1.1 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          onClick={() => setSort(\"active\")}\r\n        >\r\n          Active\r\n        </motion.button>\r\n        <motion.button\r\n          whileHover={{ scale: 1.1 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          onClick={() => setSort(\"completed\")}\r\n        >\r\n          Completed\r\n        </motion.button>\r\n        <motion.button\r\n          whileHover={{ scale: 1.1 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          onClick={() => setSort(\"all\")}\r\n        >\r\n          All\r\n        </motion.button>\r\n      </div>\r\n      <ul>\r\n        <AnimatePresence>\r\n          {props.todos.length > 0 && sort === \"active\"\r\n            ? props.todos.map((item) => {\r\n                return (\r\n                  item.completed === false && (\r\n                    <TodoItem\r\n                      key={item.id}\r\n                      item={item}\r\n                      removeTodos={props.removeTodos}\r\n                      updateTodo={props.updateTodo}\r\n                      completeTodo={props.completeTodo}\r\n                    />\r\n                  )\r\n                );\r\n              })\r\n            : null}\r\n          {props.todos.length > 0 && sort === \"completed\"\r\n            ? props.todos.map((item) => {\r\n                return (\r\n                  item.completed === true && (\r\n                    <TodoItem\r\n                      key={item.id}\r\n                      item={item}\r\n                      removeTodos={props.removeTodos}\r\n                      updateTodo={props.updateTodo}\r\n                      completeTodo={props.completeTodo}\r\n                    />\r\n                  )\r\n                );\r\n              })\r\n            : null}\r\n          {props.todos.length > 0 && sort === \"all\"\r\n            ? props.todos.map((item) => {\r\n                return (\r\n                  <TodoItem\r\n                    key={item.id}\r\n                    item={item}\r\n                    removeTodos={props.removeTodos}\r\n                    updateTodo={props.updateTodo}\r\n                    completeTodo={props.completeTodo}\r\n                  />\r\n                );\r\n              })\r\n            : null}\r\n        </AnimatePresence>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayTodos);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodos } from \"../redux/reducer\";\r\nimport { GoPlus } from \"react-icons/go\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addTodo: (obj) => dispatch(addTodos(obj)),\r\n  };\r\n};\r\n\r\nconst Todos = (props) => {\r\n  const [todo, setTodo] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setTodo(e.target.value);\r\n  };\r\n  const add = () => {\r\n  if(todo === ''){\r\n    alert('Input is Empty')\r\n  }else{\r\n    props.addTodo({\r\n      id: Math.floor(Math.random() * 1000),\r\n      item: todo,\r\n      completed: false,\r\n    });\r\n    setTodo(\"\");\r\n  }\r\n  };\r\n  return (\r\n    <div className=\"addTodos\">\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => handleChange(e)}\r\n        className=\"todo-input\"\r\n        value={todo}\r\n      />\r\n      <motion.button \r\n       whileHover={{ scale: 1.1 }}\r\n       whileTap={{ scale: 0.9 }}\r\n       onClick={() => add()} \r\n       className=\"add-btn\">\r\n        <GoPlus />\r\n      </motion.button>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\r\n","import \"./css/main.css\";\nimport DisplayTodos from \"./components/DisplayTodos\";\nimport Todos from \"./components/Todos\";\nimport { motion } from \"framer-motion\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <motion.h1\n        initial={{ y: -200 }}\n        animate={{ y: 0 }}\n        transition={{ type: \"spring\", duration: 0.5 }}\n        whileHover={{ scale: 1.1 }}\n      >\n        Todo App\n      </motion.h1>\n      <motion.div\n          initial={{ y: 1000 }}\n          animate={{ y: 0 }}\n          transition={{ type: \"spring\", duration: 1 }}\n      >\n        <Todos />\n        <DisplayTodos />\n      </motion.div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { reducer } from \"./reducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: reducer\r\n});\r\n\r\nexport default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}